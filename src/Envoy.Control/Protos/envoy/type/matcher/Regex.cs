// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/type/matcher/regex.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Type.Matcher {

  /// <summary>Holder for reflection information generated from envoy/type/matcher/regex.proto</summary>
  public static partial class RegexReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/type/matcher/regex.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RegexReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5lbnZveS90eXBlL21hdGNoZXIvcmVnZXgucHJvdG8SEmVudm95LnR5cGUu",
            "bWF0Y2hlchoeZ29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvGhd2YWxp",
            "ZGF0ZS92YWxpZGF0ZS5wcm90byLRAQoMUmVnZXhNYXRjaGVyEkwKCmdvb2ds",
            "ZV9yZTIYASABKAsyKi5lbnZveS50eXBlLm1hdGNoZXIuUmVnZXhNYXRjaGVy",
            "Lkdvb2dsZVJFMkIKuunAAwWKAQIQAUgAEhgKBXJlZ2V4GAIgASgJQgm66cAD",
            "BHICIAEaQwoJR29vZ2xlUkUyEjYKEG1heF9wcm9ncmFtX3NpemUYASABKAsy",
            "HC5nb29nbGUucHJvdG9idWYuVUludDMyVmFsdWVCFAoLZW5naW5lX3R5cGUS",
            "BbjpwAMBQjAKIGlvLmVudm95cHJveHkuZW52b3kudHlwZS5tYXRjaGVyQgpS",
            "ZWdleFByb3RvUAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Type.Matcher.RegexMatcher), global::Envoy.Type.Matcher.RegexMatcher.Parser, new[]{ "GoogleRe2", "Regex" }, new[]{ "EngineType" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Type.Matcher.RegexMatcher.Types.GoogleRE2), global::Envoy.Type.Matcher.RegexMatcher.Types.GoogleRE2.Parser, new[]{ "MaxProgramSize" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A regex matcher designed for safety when used with untrusted input.
  /// </summary>
  public sealed partial class RegexMatcher : pb::IMessage<RegexMatcher> {
    private static readonly pb::MessageParser<RegexMatcher> _parser = new pb::MessageParser<RegexMatcher>(() => new RegexMatcher());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegexMatcher> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Type.Matcher.RegexReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegexMatcher() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegexMatcher(RegexMatcher other) : this() {
      regex_ = other.regex_;
      switch (other.EngineTypeCase) {
        case EngineTypeOneofCase.GoogleRe2:
          GoogleRe2 = other.GoogleRe2.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegexMatcher Clone() {
      return new RegexMatcher(this);
    }

    /// <summary>Field number for the "google_re2" field.</summary>
    public const int GoogleRe2FieldNumber = 1;
    /// <summary>
    /// Google's RE2 regex engine.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Type.Matcher.RegexMatcher.Types.GoogleRE2 GoogleRe2 {
      get { return engineTypeCase_ == EngineTypeOneofCase.GoogleRe2 ? (global::Envoy.Type.Matcher.RegexMatcher.Types.GoogleRE2) engineType_ : null; }
      set {
        engineType_ = value;
        engineTypeCase_ = value == null ? EngineTypeOneofCase.None : EngineTypeOneofCase.GoogleRe2;
      }
    }

    /// <summary>Field number for the "regex" field.</summary>
    public const int RegexFieldNumber = 2;
    private string regex_ = "";
    /// <summary>
    /// The regex match string. The string must be supported by the configured engine.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Regex {
      get { return regex_; }
      set {
        regex_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object engineType_;
    /// <summary>Enum of possible cases for the "engine_type" oneof.</summary>
    public enum EngineTypeOneofCase {
      None = 0,
      GoogleRe2 = 1,
    }
    private EngineTypeOneofCase engineTypeCase_ = EngineTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EngineTypeOneofCase EngineTypeCase {
      get { return engineTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEngineType() {
      engineTypeCase_ = EngineTypeOneofCase.None;
      engineType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegexMatcher);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegexMatcher other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GoogleRe2, other.GoogleRe2)) return false;
      if (Regex != other.Regex) return false;
      if (EngineTypeCase != other.EngineTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (engineTypeCase_ == EngineTypeOneofCase.GoogleRe2) hash ^= GoogleRe2.GetHashCode();
      if (Regex.Length != 0) hash ^= Regex.GetHashCode();
      hash ^= (int) engineTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (engineTypeCase_ == EngineTypeOneofCase.GoogleRe2) {
        output.WriteRawTag(10);
        output.WriteMessage(GoogleRe2);
      }
      if (Regex.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Regex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (engineTypeCase_ == EngineTypeOneofCase.GoogleRe2) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GoogleRe2);
      }
      if (Regex.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Regex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegexMatcher other) {
      if (other == null) {
        return;
      }
      if (other.Regex.Length != 0) {
        Regex = other.Regex;
      }
      switch (other.EngineTypeCase) {
        case EngineTypeOneofCase.GoogleRe2:
          if (GoogleRe2 == null) {
            GoogleRe2 = new global::Envoy.Type.Matcher.RegexMatcher.Types.GoogleRE2();
          }
          GoogleRe2.MergeFrom(other.GoogleRe2);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Envoy.Type.Matcher.RegexMatcher.Types.GoogleRE2 subBuilder = new global::Envoy.Type.Matcher.RegexMatcher.Types.GoogleRE2();
            if (engineTypeCase_ == EngineTypeOneofCase.GoogleRe2) {
              subBuilder.MergeFrom(GoogleRe2);
            }
            input.ReadMessage(subBuilder);
            GoogleRe2 = subBuilder;
            break;
          }
          case 18: {
            Regex = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the RegexMatcher message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Google's `RE2 &lt;https://github.com/google/re2>`_ regex engine. The regex string must adhere to
      /// the documented `syntax &lt;https://github.com/google/re2/wiki/Syntax>`_. The engine is designed
      /// to complete execution in linear time as well as limit the amount of memory used.
      /// </summary>
      public sealed partial class GoogleRE2 : pb::IMessage<GoogleRE2> {
        private static readonly pb::MessageParser<GoogleRE2> _parser = new pb::MessageParser<GoogleRE2>(() => new GoogleRE2());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<GoogleRE2> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Type.Matcher.RegexMatcher.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GoogleRE2() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GoogleRE2(GoogleRE2 other) : this() {
          MaxProgramSize = other.MaxProgramSize;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GoogleRE2 Clone() {
          return new GoogleRE2(this);
        }

        /// <summary>Field number for the "max_program_size" field.</summary>
        public const int MaxProgramSizeFieldNumber = 1;
        private static readonly pb::FieldCodec<uint?> _single_maxProgramSize_codec = pb::FieldCodec.ForStructWrapper<uint>(10);
        private uint? maxProgramSize_;
        /// <summary>
        /// This field controls the RE2 "program size" which is a rough estimate of how complex a
        /// compiled regex is to evaluate. A regex that has a program size greater than the configured
        /// value will fail to compile. In this case, the configured max program size can be increased
        /// or the regex can be simplified. If not specified, the default is 100.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint? MaxProgramSize {
          get { return maxProgramSize_; }
          set {
            maxProgramSize_ = value;
          }
        }


        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as GoogleRE2);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(GoogleRE2 other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MaxProgramSize != other.MaxProgramSize) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (maxProgramSize_ != null) hash ^= MaxProgramSize.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (maxProgramSize_ != null) {
            _single_maxProgramSize_codec.WriteTagAndValue(output, MaxProgramSize);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (maxProgramSize_ != null) {
            size += _single_maxProgramSize_codec.CalculateSizeWithTag(MaxProgramSize);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(GoogleRE2 other) {
          if (other == null) {
            return;
          }
          if (other.maxProgramSize_ != null) {
            if (maxProgramSize_ == null || other.MaxProgramSize != 0) {
              MaxProgramSize = other.MaxProgramSize;
            }
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                uint? value = _single_maxProgramSize_codec.Read(input);
                if (maxProgramSize_ == null || value != 0) {
                  MaxProgramSize = value;
                }
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
