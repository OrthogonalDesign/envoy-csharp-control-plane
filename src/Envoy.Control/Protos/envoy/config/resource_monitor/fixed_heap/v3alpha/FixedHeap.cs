// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/config/resource_monitor/fixed_heap/v3alpha/fixed_heap.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Config.ResourceMonitor.FixedHeap.V3Alpha {

  /// <summary>Holder for reflection information generated from envoy/config/resource_monitor/fixed_heap/v3alpha/fixed_heap.proto</summary>
  public static partial class FixedHeapReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/config/resource_monitor/fixed_heap/v3alpha/fixed_heap.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FixedHeapReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkFlbnZveS9jb25maWcvcmVzb3VyY2VfbW9uaXRvci9maXhlZF9oZWFwL3Yz",
            "YWxwaGEvZml4ZWRfaGVhcC5wcm90bxIwZW52b3kuY29uZmlnLnJlc291cmNl",
            "X21vbml0b3IuZml4ZWRfaGVhcC52M2FscGhhGhd2YWxpZGF0ZS92YWxpZGF0",
            "ZS5wcm90byI5Cg9GaXhlZEhlYXBDb25maWcSJgoTbWF4X2hlYXBfc2l6ZV9i",
            "eXRlcxgBIAEoBEIJuunAAwQyAiAAQlIKPmlvLmVudm95cHJveHkuZW52b3ku",
            "Y29uZmlnLnJlc291cmNlX21vbml0b3IuZml4ZWRfaGVhcC52M2FscGhhQg5G",
            "aXhlZEhlYXBQcm90b1ABYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.ResourceMonitor.FixedHeap.V3Alpha.FixedHeapConfig), global::Envoy.Config.ResourceMonitor.FixedHeap.V3Alpha.FixedHeapConfig.Parser, new[]{ "MaxHeapSizeBytes" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The fixed heap resource monitor reports the Envoy process memory pressure, computed as a
  /// fraction of currently reserved heap memory divided by a statically configured maximum
  /// specified in the FixedHeapConfig.
  /// </summary>
  public sealed partial class FixedHeapConfig : pb::IMessage<FixedHeapConfig> {
    private static readonly pb::MessageParser<FixedHeapConfig> _parser = new pb::MessageParser<FixedHeapConfig>(() => new FixedHeapConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FixedHeapConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Config.ResourceMonitor.FixedHeap.V3Alpha.FixedHeapReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FixedHeapConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FixedHeapConfig(FixedHeapConfig other) : this() {
      maxHeapSizeBytes_ = other.maxHeapSizeBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FixedHeapConfig Clone() {
      return new FixedHeapConfig(this);
    }

    /// <summary>Field number for the "max_heap_size_bytes" field.</summary>
    public const int MaxHeapSizeBytesFieldNumber = 1;
    private ulong maxHeapSizeBytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MaxHeapSizeBytes {
      get { return maxHeapSizeBytes_; }
      set {
        maxHeapSizeBytes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FixedHeapConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FixedHeapConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxHeapSizeBytes != other.MaxHeapSizeBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxHeapSizeBytes != 0UL) hash ^= MaxHeapSizeBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxHeapSizeBytes != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(MaxHeapSizeBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxHeapSizeBytes != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MaxHeapSizeBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FixedHeapConfig other) {
      if (other == null) {
        return;
      }
      if (other.MaxHeapSizeBytes != 0UL) {
        MaxHeapSizeBytes = other.MaxHeapSizeBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxHeapSizeBytes = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
