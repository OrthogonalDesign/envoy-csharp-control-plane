// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/config/filter/http/original_src/v2alpha1/original_src.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Config.Filter.Http.OriginalSrc.V2Alpha1 {

  /// <summary>Holder for reflection information generated from envoy/config/filter/http/original_src/v2alpha1/original_src.proto</summary>
  public static partial class OriginalSrcReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/config/filter/http/original_src/v2alpha1/original_src.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OriginalSrcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkFlbnZveS9jb25maWcvZmlsdGVyL2h0dHAvb3JpZ2luYWxfc3JjL3YyYWxw",
            "aGExL29yaWdpbmFsX3NyYy5wcm90bxIuZW52b3kuY29uZmlnLmZpbHRlci5o",
            "dHRwLm9yaWdpbmFsX3NyYy52MmFscGhhMRoXdmFsaWRhdGUvdmFsaWRhdGUu",
            "cHJvdG8iGwoLT3JpZ2luYWxTcmMSDAoEbWFyaxgBIAEoDUJSCjxpby5lbnZv",
            "eXByb3h5LmVudm95LmNvbmZpZy5maWx0ZXIuaHR0cC5vcmlnaW5hbF9zcmMu",
            "djJhbHBoYTFCEE9yaWdpbmFsU3JjUHJvdG9QAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.Filter.Http.OriginalSrc.V2Alpha1.OriginalSrc), global::Envoy.Config.Filter.Http.OriginalSrc.V2Alpha1.OriginalSrc.Parser, new[]{ "Mark" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The Original Src filter binds upstream connections to the original source address determined
  /// for the request. This address could come from something like the Proxy Protocol filter, or it
  /// could come from trusted http headers.
  /// </summary>
  public sealed partial class OriginalSrc : pb::IMessage<OriginalSrc> {
    private static readonly pb::MessageParser<OriginalSrc> _parser = new pb::MessageParser<OriginalSrc>(() => new OriginalSrc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OriginalSrc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Config.Filter.Http.OriginalSrc.V2Alpha1.OriginalSrcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OriginalSrc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OriginalSrc(OriginalSrc other) : this() {
      mark_ = other.mark_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OriginalSrc Clone() {
      return new OriginalSrc(this);
    }

    /// <summary>Field number for the "mark" field.</summary>
    public const int MarkFieldNumber = 1;
    private uint mark_;
    /// <summary>
    /// Sets the SO_MARK option on the upstream connection's socket to the provided value. Used to
    /// ensure that non-local addresses may be routed back through envoy when binding to the original
    /// source address. The option will not be applied if the mark is 0.
    /// [#proto-status: experimental]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Mark {
      get { return mark_; }
      set {
        mark_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OriginalSrc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OriginalSrc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mark != other.Mark) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Mark != 0) hash ^= Mark.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Mark != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Mark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Mark != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mark);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OriginalSrc other) {
      if (other == null) {
        return;
      }
      if (other.Mark != 0) {
        Mark = other.Mark;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Mark = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
