// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/config/filter/network/zookeeper_proxy/v1alpha1/zookeeper_proxy.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Config.Filter.Network.ZookeeperProxy.V1Alpha1 {

  /// <summary>Holder for reflection information generated from envoy/config/filter/network/zookeeper_proxy/v1alpha1/zookeeper_proxy.proto</summary>
  public static partial class ZookeeperProxyReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/config/filter/network/zookeeper_proxy/v1alpha1/zookeeper_proxy.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ZookeeperProxyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkplbnZveS9jb25maWcvZmlsdGVyL25ldHdvcmsvem9va2VlcGVyX3Byb3h5",
            "L3YxYWxwaGExL3pvb2tlZXBlcl9wcm94eS5wcm90bxI0ZW52b3kuY29uZmln",
            "LmZpbHRlci5uZXR3b3JrLnpvb2tlZXBlcl9wcm94eS52MWFscGhhMRoXdmFs",
            "aWRhdGUvdmFsaWRhdGUucHJvdG8aHmdvb2dsZS9wcm90b2J1Zi93cmFwcGVy",
            "cy5wcm90byJ8Cg5ab29LZWVwZXJQcm94eRIeCgtzdGF0X3ByZWZpeBgBIAEo",
            "CUIJuunAAwRyAiABEhIKCmFjY2Vzc19sb2cYAiABKAkSNgoQbWF4X3BhY2tl",
            "dF9ieXRlcxgDIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5VSW50MzJWYWx1ZUJb",
            "CkJpby5lbnZveXByb3h5LmVudm95LmNvbmZpZy5maWx0ZXIubmV0d29yay56",
            "b29rZWVwZXJfcHJveHkudjFhbHBoYTFCE1pvb2tlZXBlclByb3h5UHJvdG9Q",
            "AWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Validate.ValidateReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.Filter.Network.ZookeeperProxy.V1Alpha1.ZooKeeperProxy), global::Envoy.Config.Filter.Network.ZookeeperProxy.V1Alpha1.ZooKeeperProxy.Parser, new[]{ "StatPrefix", "AccessLog", "MaxPacketBytes" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// [#protodoc-title: ZooKeeper proxy]
  /// ZooKeeper Proxy :ref:`configuration overview &lt;config_network_filters_zookeeper_proxy>`.
  /// </summary>
  public sealed partial class ZooKeeperProxy : pb::IMessage<ZooKeeperProxy> {
    private static readonly pb::MessageParser<ZooKeeperProxy> _parser = new pb::MessageParser<ZooKeeperProxy>(() => new ZooKeeperProxy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ZooKeeperProxy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Config.Filter.Network.ZookeeperProxy.V1Alpha1.ZookeeperProxyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZooKeeperProxy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZooKeeperProxy(ZooKeeperProxy other) : this() {
      statPrefix_ = other.statPrefix_;
      accessLog_ = other.accessLog_;
      MaxPacketBytes = other.MaxPacketBytes;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZooKeeperProxy Clone() {
      return new ZooKeeperProxy(this);
    }

    /// <summary>Field number for the "stat_prefix" field.</summary>
    public const int StatPrefixFieldNumber = 1;
    private string statPrefix_ = "";
    /// <summary>
    /// The human readable prefix to use when emitting :ref:`statistics
    /// &lt;config_network_filters_zookeeper_proxy_stats>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatPrefix {
      get { return statPrefix_; }
      set {
        statPrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "access_log" field.</summary>
    public const int AccessLogFieldNumber = 2;
    private string accessLog_ = "";
    /// <summary>
    /// [#not-implemented-hide:] The optional path to use for writing ZooKeeper access logs.
    /// If the access log field is empty, access logs will not be written.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessLog {
      get { return accessLog_; }
      set {
        accessLog_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max_packet_bytes" field.</summary>
    public const int MaxPacketBytesFieldNumber = 3;
    private static readonly pb::FieldCodec<uint?> _single_maxPacketBytes_codec = pb::FieldCodec.ForStructWrapper<uint>(26);
    private uint? maxPacketBytes_;
    /// <summary>
    /// Messages — requests, responses and events — that are bigger than this value will
    /// be ignored. If it is not set, the default value is 1Mb.
    ///
    /// The value here should match the jute.maxbuffer property in your cluster configuration:
    ///
    /// https://zookeeper.apache.org/doc/r3.4.10/zookeeperAdmin.html#Unsafe+Options
    ///
    /// if that is set. If it isn't, ZooKeeper's default is also 1Mb.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint? MaxPacketBytes {
      get { return maxPacketBytes_; }
      set {
        maxPacketBytes_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ZooKeeperProxy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ZooKeeperProxy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatPrefix != other.StatPrefix) return false;
      if (AccessLog != other.AccessLog) return false;
      if (MaxPacketBytes != other.MaxPacketBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatPrefix.Length != 0) hash ^= StatPrefix.GetHashCode();
      if (AccessLog.Length != 0) hash ^= AccessLog.GetHashCode();
      if (maxPacketBytes_ != null) hash ^= MaxPacketBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatPrefix.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StatPrefix);
      }
      if (AccessLog.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AccessLog);
      }
      if (maxPacketBytes_ != null) {
        _single_maxPacketBytes_codec.WriteTagAndValue(output, MaxPacketBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatPrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatPrefix);
      }
      if (AccessLog.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessLog);
      }
      if (maxPacketBytes_ != null) {
        size += _single_maxPacketBytes_codec.CalculateSizeWithTag(MaxPacketBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ZooKeeperProxy other) {
      if (other == null) {
        return;
      }
      if (other.StatPrefix.Length != 0) {
        StatPrefix = other.StatPrefix;
      }
      if (other.AccessLog.Length != 0) {
        AccessLog = other.AccessLog;
      }
      if (other.maxPacketBytes_ != null) {
        if (maxPacketBytes_ == null || other.MaxPacketBytes != 0) {
          MaxPacketBytes = other.MaxPacketBytes;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StatPrefix = input.ReadString();
            break;
          }
          case 18: {
            AccessLog = input.ReadString();
            break;
          }
          case 26: {
            uint? value = _single_maxPacketBytes_codec.Read(input);
            if (maxPacketBytes_ == null || value != 0) {
              MaxPacketBytes = value;
            }
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
