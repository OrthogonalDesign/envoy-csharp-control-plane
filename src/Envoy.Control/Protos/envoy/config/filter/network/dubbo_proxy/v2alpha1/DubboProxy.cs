// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/config/filter/network/dubbo_proxy/v2alpha1/dubbo_proxy.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Config.Filter.Network.DubboProxy.V2Alpha1 {

  /// <summary>Holder for reflection information generated from envoy/config/filter/network/dubbo_proxy/v2alpha1/dubbo_proxy.proto</summary>
  public static partial class DubboProxyReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/config/filter/network/dubbo_proxy/v2alpha1/dubbo_proxy.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DubboProxyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkJlbnZveS9jb25maWcvZmlsdGVyL25ldHdvcmsvZHViYm9fcHJveHkvdjJh",
            "bHBoYTEvZHViYm9fcHJveHkucHJvdG8SMGVudm95LmNvbmZpZy5maWx0ZXIu",
            "bmV0d29yay5kdWJib19wcm94eS52MmFscGhhMRo8ZW52b3kvY29uZmlnL2Zp",
            "bHRlci9uZXR3b3JrL2R1YmJvX3Byb3h5L3YyYWxwaGExL3JvdXRlLnByb3Rv",
            "Ghlnb29nbGUvcHJvdG9idWYvYW55LnByb3RvGhd2YWxpZGF0ZS92YWxpZGF0",
            "ZS5wcm90byKuAwoKRHViYm9Qcm94eRIeCgtzdGF0X3ByZWZpeBgBIAEoCUIJ",
            "uunAAwRyAiABEmEKDXByb3RvY29sX3R5cGUYAiABKA4yPi5lbnZveS5jb25m",
            "aWcuZmlsdGVyLm5ldHdvcmsuZHViYm9fcHJveHkudjJhbHBoYTEuUHJvdG9j",
            "b2xUeXBlQgq66cADBYIBAhABEmsKEnNlcmlhbGl6YXRpb25fdHlwZRgDIAEo",
            "DjJDLmVudm95LmNvbmZpZy5maWx0ZXIubmV0d29yay5kdWJib19wcm94eS52",
            "MmFscGhhMS5TZXJpYWxpemF0aW9uVHlwZUIKuunAAwWCAQIQARJaCgxyb3V0",
            "ZV9jb25maWcYBCADKAsyRC5lbnZveS5jb25maWcuZmlsdGVyLm5ldHdvcmsu",
            "ZHViYm9fcHJveHkudjJhbHBoYTEuUm91dGVDb25maWd1cmF0aW9uElQKDWR1",
            "YmJvX2ZpbHRlcnMYBSADKAsyPS5lbnZveS5jb25maWcuZmlsdGVyLm5ldHdv",
            "cmsuZHViYm9fcHJveHkudjJhbHBoYTEuRHViYm9GaWx0ZXIiTAoLRHViYm9G",
            "aWx0ZXISFwoEbmFtZRgBIAEoCUIJuunAAwRyAiABEiQKBmNvbmZpZxgCIAEo",
            "CzIULmdvb2dsZS5wcm90b2J1Zi5BbnkqGQoMUHJvdG9jb2xUeXBlEgkKBUR1",
            "YmJvEAAqIQoRU2VyaWFsaXphdGlvblR5cGUSDAoISGVzc2lhbjIQAEJTCj5p",
            "by5lbnZveXByb3h5LmVudm95LmNvbmZpZy5maWx0ZXIubmV0d29yay5kdWJi",
            "b19wcm94eS52MmFscGhhMUIPRHViYm9Qcm94eVByb3RvUAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.RouteReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.ProtocolType), typeof(global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.SerializationType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.DubboProxy), global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.DubboProxy.Parser, new[]{ "StatPrefix", "ProtocolType", "SerializationType", "RouteConfig", "DubboFilters" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.DubboFilter), global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.DubboFilter.Parser, new[]{ "Name", "Config" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Dubbo Protocol types supported by Envoy.
  /// </summary>
  public enum ProtocolType {
    /// <summary>
    /// the default protocol.
    /// </summary>
    [pbr::OriginalName("Dubbo")] Dubbo = 0,
  }

  /// <summary>
  /// Dubbo Serialization types supported by Envoy.
  /// </summary>
  public enum SerializationType {
    /// <summary>
    /// the default serialization protocol.
    /// </summary>
    [pbr::OriginalName("Hessian2")] Hessian2 = 0,
  }

  #endregion

  #region Messages
  /// <summary>
  /// [#comment:next free field: 6]
  /// </summary>
  public sealed partial class DubboProxy : pb::IMessage<DubboProxy> {
    private static readonly pb::MessageParser<DubboProxy> _parser = new pb::MessageParser<DubboProxy>(() => new DubboProxy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DubboProxy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.DubboProxyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DubboProxy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DubboProxy(DubboProxy other) : this() {
      statPrefix_ = other.statPrefix_;
      protocolType_ = other.protocolType_;
      serializationType_ = other.serializationType_;
      routeConfig_ = other.routeConfig_.Clone();
      dubboFilters_ = other.dubboFilters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DubboProxy Clone() {
      return new DubboProxy(this);
    }

    /// <summary>Field number for the "stat_prefix" field.</summary>
    public const int StatPrefixFieldNumber = 1;
    private string statPrefix_ = "";
    /// <summary>
    /// The human readable prefix to use when emitting statistics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatPrefix {
      get { return statPrefix_; }
      set {
        statPrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "protocol_type" field.</summary>
    public const int ProtocolTypeFieldNumber = 2;
    private global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.ProtocolType protocolType_ = global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.ProtocolType.Dubbo;
    /// <summary>
    /// Configure the protocol used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.ProtocolType ProtocolType {
      get { return protocolType_; }
      set {
        protocolType_ = value;
      }
    }

    /// <summary>Field number for the "serialization_type" field.</summary>
    public const int SerializationTypeFieldNumber = 3;
    private global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.SerializationType serializationType_ = global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.SerializationType.Hessian2;
    /// <summary>
    /// Configure the serialization protocol used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.SerializationType SerializationType {
      get { return serializationType_; }
      set {
        serializationType_ = value;
      }
    }

    /// <summary>Field number for the "route_config" field.</summary>
    public const int RouteConfigFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.RouteConfiguration> _repeated_routeConfig_codec
        = pb::FieldCodec.ForMessage(34, global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.RouteConfiguration.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.RouteConfiguration> routeConfig_ = new pbc::RepeatedField<global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.RouteConfiguration>();
    /// <summary>
    /// The route table for the connection manager is static and is specified in this property.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.RouteConfiguration> RouteConfig {
      get { return routeConfig_; }
    }

    /// <summary>Field number for the "dubbo_filters" field.</summary>
    public const int DubboFiltersFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.DubboFilter> _repeated_dubboFilters_codec
        = pb::FieldCodec.ForMessage(42, global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.DubboFilter.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.DubboFilter> dubboFilters_ = new pbc::RepeatedField<global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.DubboFilter>();
    /// <summary>
    /// A list of individual Dubbo filters that make up the filter chain for requests made to the
    /// Dubbo proxy. Order matters as the filters are processed sequentially. For backwards
    /// compatibility, if no dubbo_filters are specified, a default Dubbo router filter
    /// (`envoy.filters.dubbo.router`) is used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.DubboFilter> DubboFilters {
      get { return dubboFilters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DubboProxy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DubboProxy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatPrefix != other.StatPrefix) return false;
      if (ProtocolType != other.ProtocolType) return false;
      if (SerializationType != other.SerializationType) return false;
      if(!routeConfig_.Equals(other.routeConfig_)) return false;
      if(!dubboFilters_.Equals(other.dubboFilters_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatPrefix.Length != 0) hash ^= StatPrefix.GetHashCode();
      if (ProtocolType != global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.ProtocolType.Dubbo) hash ^= ProtocolType.GetHashCode();
      if (SerializationType != global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.SerializationType.Hessian2) hash ^= SerializationType.GetHashCode();
      hash ^= routeConfig_.GetHashCode();
      hash ^= dubboFilters_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatPrefix.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StatPrefix);
      }
      if (ProtocolType != global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.ProtocolType.Dubbo) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ProtocolType);
      }
      if (SerializationType != global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.SerializationType.Hessian2) {
        output.WriteRawTag(24);
        output.WriteEnum((int) SerializationType);
      }
      routeConfig_.WriteTo(output, _repeated_routeConfig_codec);
      dubboFilters_.WriteTo(output, _repeated_dubboFilters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatPrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatPrefix);
      }
      if (ProtocolType != global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.ProtocolType.Dubbo) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ProtocolType);
      }
      if (SerializationType != global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.SerializationType.Hessian2) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SerializationType);
      }
      size += routeConfig_.CalculateSize(_repeated_routeConfig_codec);
      size += dubboFilters_.CalculateSize(_repeated_dubboFilters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DubboProxy other) {
      if (other == null) {
        return;
      }
      if (other.StatPrefix.Length != 0) {
        StatPrefix = other.StatPrefix;
      }
      if (other.ProtocolType != global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.ProtocolType.Dubbo) {
        ProtocolType = other.ProtocolType;
      }
      if (other.SerializationType != global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.SerializationType.Hessian2) {
        SerializationType = other.SerializationType;
      }
      routeConfig_.Add(other.routeConfig_);
      dubboFilters_.Add(other.dubboFilters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StatPrefix = input.ReadString();
            break;
          }
          case 16: {
            ProtocolType = (global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.ProtocolType) input.ReadEnum();
            break;
          }
          case 24: {
            SerializationType = (global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.SerializationType) input.ReadEnum();
            break;
          }
          case 34: {
            routeConfig_.AddEntriesFrom(input, _repeated_routeConfig_codec);
            break;
          }
          case 42: {
            dubboFilters_.AddEntriesFrom(input, _repeated_dubboFilters_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DubboFilter configures a Dubbo filter.
  /// [#comment:next free field: 3]
  /// </summary>
  public sealed partial class DubboFilter : pb::IMessage<DubboFilter> {
    private static readonly pb::MessageParser<DubboFilter> _parser = new pb::MessageParser<DubboFilter>(() => new DubboFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DubboFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Config.Filter.Network.DubboProxy.V2Alpha1.DubboProxyReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DubboFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DubboFilter(DubboFilter other) : this() {
      name_ = other.name_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DubboFilter Clone() {
      return new DubboFilter(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the filter to instantiate. The name must match a supported
    /// filter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Any config_;
    /// <summary>
    /// Filter specific configuration which depends on the filter being
    /// instantiated. See the supported filters for further documentation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DubboFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DubboFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Config, other.Config)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DubboFilter other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Config.MergeFrom(other.Config);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
