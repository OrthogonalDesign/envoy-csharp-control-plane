// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/service/load_stats/v2/lrs.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Service.LoadStats.V2 {

  /// <summary>Holder for reflection information generated from envoy/service/load_stats/v2/lrs.proto</summary>
  public static partial class LrsReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/service/load_stats/v2/lrs.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LrsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVlbnZveS9zZXJ2aWNlL2xvYWRfc3RhdHMvdjIvbHJzLnByb3RvEhtlbnZv",
            "eS5zZXJ2aWNlLmxvYWRfc3RhdHMudjIaHGVudm95L2FwaS92Mi9jb3JlL2Jh",
            "c2UucHJvdG8aJ2Vudm95L2FwaS92Mi9lbmRwb2ludC9sb2FkX3JlcG9ydC5w",
            "cm90bxoeZ29vZ2xlL3Byb3RvYnVmL2R1cmF0aW9uLnByb3RvGhd2YWxpZGF0",
            "ZS92YWxpZGF0ZS5wcm90byJ1ChBMb2FkU3RhdHNSZXF1ZXN0EiUKBG5vZGUY",
            "ASABKAsyFy5lbnZveS5hcGkudjIuY29yZS5Ob2RlEjoKDWNsdXN0ZXJfc3Rh",
            "dHMYAiADKAsyIy5lbnZveS5hcGkudjIuZW5kcG9pbnQuQ2x1c3RlclN0YXRz",
            "IpIBChFMb2FkU3RhdHNSZXNwb25zZRIcCghjbHVzdGVycxgBIAMoCUIKuunA",
            "AwWSAQIIARI6Chdsb2FkX3JlcG9ydGluZ19pbnRlcnZhbBgCIAEoCzIZLmdv",
            "b2dsZS5wcm90b2J1Zi5EdXJhdGlvbhIjChtyZXBvcnRfZW5kcG9pbnRfZ3Jh",
            "bnVsYXJpdHkYAyABKAgyjgEKFExvYWRSZXBvcnRpbmdTZXJ2aWNlEnYKD1N0",
            "cmVhbUxvYWRTdGF0cxItLmVudm95LnNlcnZpY2UubG9hZF9zdGF0cy52Mi5M",
            "b2FkU3RhdHNSZXF1ZXN0Gi4uZW52b3kuc2VydmljZS5sb2FkX3N0YXRzLnYy",
            "LkxvYWRTdGF0c1Jlc3BvbnNlIgAoATABQjoKKWlvLmVudm95cHJveHkuZW52",
            "b3kuc2VydmljZS5sb2FkX3N0YXRzLnYyQghMcnNQcm90b1ABiAEBYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Api.V2.Core.BaseReflection.Descriptor, global::Envoy.Api.V2.Endpoint.LoadReportReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Service.LoadStats.V2.LoadStatsRequest), global::Envoy.Service.LoadStats.V2.LoadStatsRequest.Parser, new[]{ "Node", "ClusterStats" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Service.LoadStats.V2.LoadStatsResponse), global::Envoy.Service.LoadStats.V2.LoadStatsResponse.Parser, new[]{ "Clusters", "LoadReportingInterval", "ReportEndpointGranularity" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A load report Envoy sends to the management server.
  /// [#not-implemented-hide:] Not configuration. TBD how to doc proto APIs.
  /// </summary>
  public sealed partial class LoadStatsRequest : pb::IMessage<LoadStatsRequest> {
    private static readonly pb::MessageParser<LoadStatsRequest> _parser = new pb::MessageParser<LoadStatsRequest>(() => new LoadStatsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadStatsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Service.LoadStats.V2.LrsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadStatsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadStatsRequest(LoadStatsRequest other) : this() {
      node_ = other.node_ != null ? other.node_.Clone() : null;
      clusterStats_ = other.clusterStats_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadStatsRequest Clone() {
      return new LoadStatsRequest(this);
    }

    /// <summary>Field number for the "node" field.</summary>
    public const int NodeFieldNumber = 1;
    private global::Envoy.Api.V2.Core.Node node_;
    /// <summary>
    /// Node identifier for Envoy instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Api.V2.Core.Node Node {
      get { return node_; }
      set {
        node_ = value;
      }
    }

    /// <summary>Field number for the "cluster_stats" field.</summary>
    public const int ClusterStatsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Envoy.Api.V2.Endpoint.ClusterStats> _repeated_clusterStats_codec
        = pb::FieldCodec.ForMessage(18, global::Envoy.Api.V2.Endpoint.ClusterStats.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Api.V2.Endpoint.ClusterStats> clusterStats_ = new pbc::RepeatedField<global::Envoy.Api.V2.Endpoint.ClusterStats>();
    /// <summary>
    /// A list of load stats to report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Envoy.Api.V2.Endpoint.ClusterStats> ClusterStats {
      get { return clusterStats_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadStatsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadStatsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Node, other.Node)) return false;
      if(!clusterStats_.Equals(other.clusterStats_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (node_ != null) hash ^= Node.GetHashCode();
      hash ^= clusterStats_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (node_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Node);
      }
      clusterStats_.WriteTo(output, _repeated_clusterStats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (node_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Node);
      }
      size += clusterStats_.CalculateSize(_repeated_clusterStats_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadStatsRequest other) {
      if (other == null) {
        return;
      }
      if (other.node_ != null) {
        if (node_ == null) {
          Node = new global::Envoy.Api.V2.Core.Node();
        }
        Node.MergeFrom(other.Node);
      }
      clusterStats_.Add(other.clusterStats_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (node_ == null) {
              Node = new global::Envoy.Api.V2.Core.Node();
            }
            input.ReadMessage(Node);
            break;
          }
          case 18: {
            clusterStats_.AddEntriesFrom(input, _repeated_clusterStats_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The management server sends envoy a LoadStatsResponse with all clusters it
  /// is interested in learning load stats about.
  /// [#not-implemented-hide:] Not configuration. TBD how to doc proto APIs.
  /// </summary>
  public sealed partial class LoadStatsResponse : pb::IMessage<LoadStatsResponse> {
    private static readonly pb::MessageParser<LoadStatsResponse> _parser = new pb::MessageParser<LoadStatsResponse>(() => new LoadStatsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadStatsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Service.LoadStats.V2.LrsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadStatsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadStatsResponse(LoadStatsResponse other) : this() {
      clusters_ = other.clusters_.Clone();
      loadReportingInterval_ = other.loadReportingInterval_ != null ? other.loadReportingInterval_.Clone() : null;
      reportEndpointGranularity_ = other.reportEndpointGranularity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadStatsResponse Clone() {
      return new LoadStatsResponse(this);
    }

    /// <summary>Field number for the "clusters" field.</summary>
    public const int ClustersFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_clusters_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> clusters_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Clusters to report stats for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Clusters {
      get { return clusters_; }
    }

    /// <summary>Field number for the "load_reporting_interval" field.</summary>
    public const int LoadReportingIntervalFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Duration loadReportingInterval_;
    /// <summary>
    /// The minimum interval of time to collect stats over. This is only a minimum for two reasons:
    /// 1. There may be some delay from when the timer fires until stats sampling occurs.
    /// 2. For clusters that were already feature in the previous *LoadStatsResponse*, any traffic
    ///    that is observed in between the corresponding previous *LoadStatsRequest* and this
    ///    *LoadStatsResponse* will also be accumulated and billed to the cluster. This avoids a period
    ///    of inobservability that might otherwise exists between the messages. New clusters are not
    ///    subject to this consideration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration LoadReportingInterval {
      get { return loadReportingInterval_; }
      set {
        loadReportingInterval_ = value;
      }
    }

    /// <summary>Field number for the "report_endpoint_granularity" field.</summary>
    public const int ReportEndpointGranularityFieldNumber = 3;
    private bool reportEndpointGranularity_;
    /// <summary>
    /// Set to *true* if the management server supports endpoint granularity
    /// report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReportEndpointGranularity {
      get { return reportEndpointGranularity_; }
      set {
        reportEndpointGranularity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadStatsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadStatsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!clusters_.Equals(other.clusters_)) return false;
      if (!object.Equals(LoadReportingInterval, other.LoadReportingInterval)) return false;
      if (ReportEndpointGranularity != other.ReportEndpointGranularity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= clusters_.GetHashCode();
      if (loadReportingInterval_ != null) hash ^= LoadReportingInterval.GetHashCode();
      if (ReportEndpointGranularity != false) hash ^= ReportEndpointGranularity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      clusters_.WriteTo(output, _repeated_clusters_codec);
      if (loadReportingInterval_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LoadReportingInterval);
      }
      if (ReportEndpointGranularity != false) {
        output.WriteRawTag(24);
        output.WriteBool(ReportEndpointGranularity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += clusters_.CalculateSize(_repeated_clusters_codec);
      if (loadReportingInterval_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoadReportingInterval);
      }
      if (ReportEndpointGranularity != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadStatsResponse other) {
      if (other == null) {
        return;
      }
      clusters_.Add(other.clusters_);
      if (other.loadReportingInterval_ != null) {
        if (loadReportingInterval_ == null) {
          LoadReportingInterval = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        LoadReportingInterval.MergeFrom(other.LoadReportingInterval);
      }
      if (other.ReportEndpointGranularity != false) {
        ReportEndpointGranularity = other.ReportEndpointGranularity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            clusters_.AddEntriesFrom(input, _repeated_clusters_codec);
            break;
          }
          case 18: {
            if (loadReportingInterval_ == null) {
              LoadReportingInterval = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(LoadReportingInterval);
            break;
          }
          case 24: {
            ReportEndpointGranularity = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
