// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: envoy/data/tap/v3alpha/http.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Data.Tap.V3Alpha {

  /// <summary>Holder for reflection information generated from envoy/data/tap/v3alpha/http.proto</summary>
  public static partial class HttpReflection {

    #region Descriptor
    /// <summary>File descriptor for envoy/data/tap/v3alpha/http.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HttpReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFlbnZveS9kYXRhL3RhcC92M2FscGhhL2h0dHAucHJvdG8SFmVudm95LmRh",
            "dGEudGFwLnYzYWxwaGEaIWVudm95L2FwaS92M2FscGhhL2NvcmUvYmFzZS5w",
            "cm90bxojZW52b3kvZGF0YS90YXAvdjNhbHBoYS9jb21tb24ucHJvdG8iwQIK",
            "EUh0dHBCdWZmZXJlZFRyYWNlEkIKB3JlcXVlc3QYASABKAsyMS5lbnZveS5k",
            "YXRhLnRhcC52M2FscGhhLkh0dHBCdWZmZXJlZFRyYWNlLk1lc3NhZ2USQwoI",
            "cmVzcG9uc2UYAiABKAsyMS5lbnZveS5kYXRhLnRhcC52M2FscGhhLkh0dHBC",
            "dWZmZXJlZFRyYWNlLk1lc3NhZ2UaogEKB01lc3NhZ2USNAoHaGVhZGVycxgB",
            "IAMoCzIjLmVudm95LmFwaS52M2FscGhhLmNvcmUuSGVhZGVyVmFsdWUSKgoE",
            "Ym9keRgCIAEoCzIcLmVudm95LmRhdGEudGFwLnYzYWxwaGEuQm9keRI1Cgh0",
            "cmFpbGVycxgDIAMoCzIjLmVudm95LmFwaS52M2FscGhhLmNvcmUuSGVhZGVy",
            "VmFsdWUisgMKGEh0dHBTdHJlYW1lZFRyYWNlU2VnbWVudBIQCgh0cmFjZV9p",
            "ZBgBIAEoBBI8Cg9yZXF1ZXN0X2hlYWRlcnMYAiABKAsyIS5lbnZveS5hcGku",
            "djNhbHBoYS5jb3JlLkhlYWRlck1hcEgAEjoKEnJlcXVlc3RfYm9keV9jaHVu",
            "axgDIAEoCzIcLmVudm95LmRhdGEudGFwLnYzYWxwaGEuQm9keUgAEj0KEHJl",
            "cXVlc3RfdHJhaWxlcnMYBCABKAsyIS5lbnZveS5hcGkudjNhbHBoYS5jb3Jl",
            "LkhlYWRlck1hcEgAEj0KEHJlc3BvbnNlX2hlYWRlcnMYBSABKAsyIS5lbnZv",
            "eS5hcGkudjNhbHBoYS5jb3JlLkhlYWRlck1hcEgAEjsKE3Jlc3BvbnNlX2Jv",
            "ZHlfY2h1bmsYBiABKAsyHC5lbnZveS5kYXRhLnRhcC52M2FscGhhLkJvZHlI",
            "ABI+ChFyZXNwb25zZV90cmFpbGVycxgHIAEoCzIhLmVudm95LmFwaS52M2Fs",
            "cGhhLmNvcmUuSGVhZGVyTWFwSABCDwoNbWVzc2FnZV9waWVjZUIzCiRpby5l",
            "bnZveXByb3h5LmVudm95LmRhdGEudGFwLnYzYWxwaGFCCUh0dHBQcm90b1AB",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Api.V3Alpha.Core.BaseReflection.Descriptor, global::Envoy.Data.Tap.V3Alpha.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Tap.V3Alpha.HttpBufferedTrace), global::Envoy.Data.Tap.V3Alpha.HttpBufferedTrace.Parser, new[]{ "Request", "Response" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Tap.V3Alpha.HttpBufferedTrace.Types.Message), global::Envoy.Data.Tap.V3Alpha.HttpBufferedTrace.Types.Message.Parser, new[]{ "Headers", "Body", "Trailers" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Data.Tap.V3Alpha.HttpStreamedTraceSegment), global::Envoy.Data.Tap.V3Alpha.HttpStreamedTraceSegment.Parser, new[]{ "TraceId", "RequestHeaders", "RequestBodyChunk", "RequestTrailers", "ResponseHeaders", "ResponseBodyChunk", "ResponseTrailers" }, new[]{ "MessagePiece" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A fully buffered HTTP trace message.
  /// </summary>
  public sealed partial class HttpBufferedTrace : pb::IMessage<HttpBufferedTrace> {
    private static readonly pb::MessageParser<HttpBufferedTrace> _parser = new pb::MessageParser<HttpBufferedTrace>(() => new HttpBufferedTrace());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HttpBufferedTrace> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Data.Tap.V3Alpha.HttpReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpBufferedTrace() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpBufferedTrace(HttpBufferedTrace other) : this() {
      request_ = other.request_ != null ? other.request_.Clone() : null;
      response_ = other.response_ != null ? other.response_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpBufferedTrace Clone() {
      return new HttpBufferedTrace(this);
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 1;
    private global::Envoy.Data.Tap.V3Alpha.HttpBufferedTrace.Types.Message request_;
    /// <summary>
    /// Request message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Data.Tap.V3Alpha.HttpBufferedTrace.Types.Message Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 2;
    private global::Envoy.Data.Tap.V3Alpha.HttpBufferedTrace.Types.Message response_;
    /// <summary>
    /// Response message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Data.Tap.V3Alpha.HttpBufferedTrace.Types.Message Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HttpBufferedTrace);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HttpBufferedTrace other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Request, other.Request)) return false;
      if (!object.Equals(Response, other.Response)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (request_ != null) hash ^= Request.GetHashCode();
      if (response_ != null) hash ^= Response.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (request_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Request);
      }
      if (response_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HttpBufferedTrace other) {
      if (other == null) {
        return;
      }
      if (other.request_ != null) {
        if (request_ == null) {
          Request = new global::Envoy.Data.Tap.V3Alpha.HttpBufferedTrace.Types.Message();
        }
        Request.MergeFrom(other.Request);
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::Envoy.Data.Tap.V3Alpha.HttpBufferedTrace.Types.Message();
        }
        Response.MergeFrom(other.Response);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (request_ == null) {
              Request = new global::Envoy.Data.Tap.V3Alpha.HttpBufferedTrace.Types.Message();
            }
            input.ReadMessage(Request);
            break;
          }
          case 18: {
            if (response_ == null) {
              Response = new global::Envoy.Data.Tap.V3Alpha.HttpBufferedTrace.Types.Message();
            }
            input.ReadMessage(Response);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the HttpBufferedTrace message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// HTTP message wrapper.
      /// </summary>
      public sealed partial class Message : pb::IMessage<Message> {
        private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Message> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Data.Tap.V3Alpha.HttpBufferedTrace.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Message() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Message(Message other) : this() {
          headers_ = other.headers_.Clone();
          body_ = other.body_ != null ? other.body_.Clone() : null;
          trailers_ = other.trailers_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Message Clone() {
          return new Message(this);
        }

        /// <summary>Field number for the "headers" field.</summary>
        public const int HeadersFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Envoy.Api.V3Alpha.Core.HeaderValue> _repeated_headers_codec
            = pb::FieldCodec.ForMessage(10, global::Envoy.Api.V3Alpha.Core.HeaderValue.Parser);
        private readonly pbc::RepeatedField<global::Envoy.Api.V3Alpha.Core.HeaderValue> headers_ = new pbc::RepeatedField<global::Envoy.Api.V3Alpha.Core.HeaderValue>();
        /// <summary>
        /// Message headers.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Envoy.Api.V3Alpha.Core.HeaderValue> Headers {
          get { return headers_; }
        }

        /// <summary>Field number for the "body" field.</summary>
        public const int BodyFieldNumber = 2;
        private global::Envoy.Data.Tap.V3Alpha.Body body_;
        /// <summary>
        /// Message body.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Envoy.Data.Tap.V3Alpha.Body Body {
          get { return body_; }
          set {
            body_ = value;
          }
        }

        /// <summary>Field number for the "trailers" field.</summary>
        public const int TrailersFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Envoy.Api.V3Alpha.Core.HeaderValue> _repeated_trailers_codec
            = pb::FieldCodec.ForMessage(26, global::Envoy.Api.V3Alpha.Core.HeaderValue.Parser);
        private readonly pbc::RepeatedField<global::Envoy.Api.V3Alpha.Core.HeaderValue> trailers_ = new pbc::RepeatedField<global::Envoy.Api.V3Alpha.Core.HeaderValue>();
        /// <summary>
        /// Message trailers.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Envoy.Api.V3Alpha.Core.HeaderValue> Trailers {
          get { return trailers_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Message);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Message other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!headers_.Equals(other.headers_)) return false;
          if (!object.Equals(Body, other.Body)) return false;
          if(!trailers_.Equals(other.trailers_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= headers_.GetHashCode();
          if (body_ != null) hash ^= Body.GetHashCode();
          hash ^= trailers_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          headers_.WriteTo(output, _repeated_headers_codec);
          if (body_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Body);
          }
          trailers_.WriteTo(output, _repeated_trailers_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += headers_.CalculateSize(_repeated_headers_codec);
          if (body_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Body);
          }
          size += trailers_.CalculateSize(_repeated_trailers_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Message other) {
          if (other == null) {
            return;
          }
          headers_.Add(other.headers_);
          if (other.body_ != null) {
            if (body_ == null) {
              Body = new global::Envoy.Data.Tap.V3Alpha.Body();
            }
            Body.MergeFrom(other.Body);
          }
          trailers_.Add(other.trailers_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                headers_.AddEntriesFrom(input, _repeated_headers_codec);
                break;
              }
              case 18: {
                if (body_ == null) {
                  Body = new global::Envoy.Data.Tap.V3Alpha.Body();
                }
                input.ReadMessage(Body);
                break;
              }
              case 26: {
                trailers_.AddEntriesFrom(input, _repeated_trailers_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// A streamed HTTP trace segment. Multiple segments make up a full trace.
  /// </summary>
  public sealed partial class HttpStreamedTraceSegment : pb::IMessage<HttpStreamedTraceSegment> {
    private static readonly pb::MessageParser<HttpStreamedTraceSegment> _parser = new pb::MessageParser<HttpStreamedTraceSegment>(() => new HttpStreamedTraceSegment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HttpStreamedTraceSegment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Data.Tap.V3Alpha.HttpReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpStreamedTraceSegment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpStreamedTraceSegment(HttpStreamedTraceSegment other) : this() {
      traceId_ = other.traceId_;
      switch (other.MessagePieceCase) {
        case MessagePieceOneofCase.RequestHeaders:
          RequestHeaders = other.RequestHeaders.Clone();
          break;
        case MessagePieceOneofCase.RequestBodyChunk:
          RequestBodyChunk = other.RequestBodyChunk.Clone();
          break;
        case MessagePieceOneofCase.RequestTrailers:
          RequestTrailers = other.RequestTrailers.Clone();
          break;
        case MessagePieceOneofCase.ResponseHeaders:
          ResponseHeaders = other.ResponseHeaders.Clone();
          break;
        case MessagePieceOneofCase.ResponseBodyChunk:
          ResponseBodyChunk = other.ResponseBodyChunk.Clone();
          break;
        case MessagePieceOneofCase.ResponseTrailers:
          ResponseTrailers = other.ResponseTrailers.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpStreamedTraceSegment Clone() {
      return new HttpStreamedTraceSegment(this);
    }

    /// <summary>Field number for the "trace_id" field.</summary>
    public const int TraceIdFieldNumber = 1;
    private ulong traceId_;
    /// <summary>
    /// Trace ID unique to the originating Envoy only. Trace IDs can repeat and should not be used
    /// for long term stable uniqueness.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TraceId {
      get { return traceId_; }
      set {
        traceId_ = value;
      }
    }

    /// <summary>Field number for the "request_headers" field.</summary>
    public const int RequestHeadersFieldNumber = 2;
    /// <summary>
    /// Request headers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Api.V3Alpha.Core.HeaderMap RequestHeaders {
      get { return messagePieceCase_ == MessagePieceOneofCase.RequestHeaders ? (global::Envoy.Api.V3Alpha.Core.HeaderMap) messagePiece_ : null; }
      set {
        messagePiece_ = value;
        messagePieceCase_ = value == null ? MessagePieceOneofCase.None : MessagePieceOneofCase.RequestHeaders;
      }
    }

    /// <summary>Field number for the "request_body_chunk" field.</summary>
    public const int RequestBodyChunkFieldNumber = 3;
    /// <summary>
    /// Request body chunk.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Data.Tap.V3Alpha.Body RequestBodyChunk {
      get { return messagePieceCase_ == MessagePieceOneofCase.RequestBodyChunk ? (global::Envoy.Data.Tap.V3Alpha.Body) messagePiece_ : null; }
      set {
        messagePiece_ = value;
        messagePieceCase_ = value == null ? MessagePieceOneofCase.None : MessagePieceOneofCase.RequestBodyChunk;
      }
    }

    /// <summary>Field number for the "request_trailers" field.</summary>
    public const int RequestTrailersFieldNumber = 4;
    /// <summary>
    /// Request trailers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Api.V3Alpha.Core.HeaderMap RequestTrailers {
      get { return messagePieceCase_ == MessagePieceOneofCase.RequestTrailers ? (global::Envoy.Api.V3Alpha.Core.HeaderMap) messagePiece_ : null; }
      set {
        messagePiece_ = value;
        messagePieceCase_ = value == null ? MessagePieceOneofCase.None : MessagePieceOneofCase.RequestTrailers;
      }
    }

    /// <summary>Field number for the "response_headers" field.</summary>
    public const int ResponseHeadersFieldNumber = 5;
    /// <summary>
    /// Response headers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Api.V3Alpha.Core.HeaderMap ResponseHeaders {
      get { return messagePieceCase_ == MessagePieceOneofCase.ResponseHeaders ? (global::Envoy.Api.V3Alpha.Core.HeaderMap) messagePiece_ : null; }
      set {
        messagePiece_ = value;
        messagePieceCase_ = value == null ? MessagePieceOneofCase.None : MessagePieceOneofCase.ResponseHeaders;
      }
    }

    /// <summary>Field number for the "response_body_chunk" field.</summary>
    public const int ResponseBodyChunkFieldNumber = 6;
    /// <summary>
    /// Response body chunk.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Data.Tap.V3Alpha.Body ResponseBodyChunk {
      get { return messagePieceCase_ == MessagePieceOneofCase.ResponseBodyChunk ? (global::Envoy.Data.Tap.V3Alpha.Body) messagePiece_ : null; }
      set {
        messagePiece_ = value;
        messagePieceCase_ = value == null ? MessagePieceOneofCase.None : MessagePieceOneofCase.ResponseBodyChunk;
      }
    }

    /// <summary>Field number for the "response_trailers" field.</summary>
    public const int ResponseTrailersFieldNumber = 7;
    /// <summary>
    /// Response trailers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Api.V3Alpha.Core.HeaderMap ResponseTrailers {
      get { return messagePieceCase_ == MessagePieceOneofCase.ResponseTrailers ? (global::Envoy.Api.V3Alpha.Core.HeaderMap) messagePiece_ : null; }
      set {
        messagePiece_ = value;
        messagePieceCase_ = value == null ? MessagePieceOneofCase.None : MessagePieceOneofCase.ResponseTrailers;
      }
    }

    private object messagePiece_;
    /// <summary>Enum of possible cases for the "message_piece" oneof.</summary>
    public enum MessagePieceOneofCase {
      None = 0,
      RequestHeaders = 2,
      RequestBodyChunk = 3,
      RequestTrailers = 4,
      ResponseHeaders = 5,
      ResponseBodyChunk = 6,
      ResponseTrailers = 7,
    }
    private MessagePieceOneofCase messagePieceCase_ = MessagePieceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessagePieceOneofCase MessagePieceCase {
      get { return messagePieceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessagePiece() {
      messagePieceCase_ = MessagePieceOneofCase.None;
      messagePiece_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HttpStreamedTraceSegment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HttpStreamedTraceSegment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TraceId != other.TraceId) return false;
      if (!object.Equals(RequestHeaders, other.RequestHeaders)) return false;
      if (!object.Equals(RequestBodyChunk, other.RequestBodyChunk)) return false;
      if (!object.Equals(RequestTrailers, other.RequestTrailers)) return false;
      if (!object.Equals(ResponseHeaders, other.ResponseHeaders)) return false;
      if (!object.Equals(ResponseBodyChunk, other.ResponseBodyChunk)) return false;
      if (!object.Equals(ResponseTrailers, other.ResponseTrailers)) return false;
      if (MessagePieceCase != other.MessagePieceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TraceId != 0UL) hash ^= TraceId.GetHashCode();
      if (messagePieceCase_ == MessagePieceOneofCase.RequestHeaders) hash ^= RequestHeaders.GetHashCode();
      if (messagePieceCase_ == MessagePieceOneofCase.RequestBodyChunk) hash ^= RequestBodyChunk.GetHashCode();
      if (messagePieceCase_ == MessagePieceOneofCase.RequestTrailers) hash ^= RequestTrailers.GetHashCode();
      if (messagePieceCase_ == MessagePieceOneofCase.ResponseHeaders) hash ^= ResponseHeaders.GetHashCode();
      if (messagePieceCase_ == MessagePieceOneofCase.ResponseBodyChunk) hash ^= ResponseBodyChunk.GetHashCode();
      if (messagePieceCase_ == MessagePieceOneofCase.ResponseTrailers) hash ^= ResponseTrailers.GetHashCode();
      hash ^= (int) messagePieceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TraceId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(TraceId);
      }
      if (messagePieceCase_ == MessagePieceOneofCase.RequestHeaders) {
        output.WriteRawTag(18);
        output.WriteMessage(RequestHeaders);
      }
      if (messagePieceCase_ == MessagePieceOneofCase.RequestBodyChunk) {
        output.WriteRawTag(26);
        output.WriteMessage(RequestBodyChunk);
      }
      if (messagePieceCase_ == MessagePieceOneofCase.RequestTrailers) {
        output.WriteRawTag(34);
        output.WriteMessage(RequestTrailers);
      }
      if (messagePieceCase_ == MessagePieceOneofCase.ResponseHeaders) {
        output.WriteRawTag(42);
        output.WriteMessage(ResponseHeaders);
      }
      if (messagePieceCase_ == MessagePieceOneofCase.ResponseBodyChunk) {
        output.WriteRawTag(50);
        output.WriteMessage(ResponseBodyChunk);
      }
      if (messagePieceCase_ == MessagePieceOneofCase.ResponseTrailers) {
        output.WriteRawTag(58);
        output.WriteMessage(ResponseTrailers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TraceId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TraceId);
      }
      if (messagePieceCase_ == MessagePieceOneofCase.RequestHeaders) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeaders);
      }
      if (messagePieceCase_ == MessagePieceOneofCase.RequestBodyChunk) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestBodyChunk);
      }
      if (messagePieceCase_ == MessagePieceOneofCase.RequestTrailers) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestTrailers);
      }
      if (messagePieceCase_ == MessagePieceOneofCase.ResponseHeaders) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseHeaders);
      }
      if (messagePieceCase_ == MessagePieceOneofCase.ResponseBodyChunk) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseBodyChunk);
      }
      if (messagePieceCase_ == MessagePieceOneofCase.ResponseTrailers) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseTrailers);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HttpStreamedTraceSegment other) {
      if (other == null) {
        return;
      }
      if (other.TraceId != 0UL) {
        TraceId = other.TraceId;
      }
      switch (other.MessagePieceCase) {
        case MessagePieceOneofCase.RequestHeaders:
          if (RequestHeaders == null) {
            RequestHeaders = new global::Envoy.Api.V3Alpha.Core.HeaderMap();
          }
          RequestHeaders.MergeFrom(other.RequestHeaders);
          break;
        case MessagePieceOneofCase.RequestBodyChunk:
          if (RequestBodyChunk == null) {
            RequestBodyChunk = new global::Envoy.Data.Tap.V3Alpha.Body();
          }
          RequestBodyChunk.MergeFrom(other.RequestBodyChunk);
          break;
        case MessagePieceOneofCase.RequestTrailers:
          if (RequestTrailers == null) {
            RequestTrailers = new global::Envoy.Api.V3Alpha.Core.HeaderMap();
          }
          RequestTrailers.MergeFrom(other.RequestTrailers);
          break;
        case MessagePieceOneofCase.ResponseHeaders:
          if (ResponseHeaders == null) {
            ResponseHeaders = new global::Envoy.Api.V3Alpha.Core.HeaderMap();
          }
          ResponseHeaders.MergeFrom(other.ResponseHeaders);
          break;
        case MessagePieceOneofCase.ResponseBodyChunk:
          if (ResponseBodyChunk == null) {
            ResponseBodyChunk = new global::Envoy.Data.Tap.V3Alpha.Body();
          }
          ResponseBodyChunk.MergeFrom(other.ResponseBodyChunk);
          break;
        case MessagePieceOneofCase.ResponseTrailers:
          if (ResponseTrailers == null) {
            ResponseTrailers = new global::Envoy.Api.V3Alpha.Core.HeaderMap();
          }
          ResponseTrailers.MergeFrom(other.ResponseTrailers);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TraceId = input.ReadUInt64();
            break;
          }
          case 18: {
            global::Envoy.Api.V3Alpha.Core.HeaderMap subBuilder = new global::Envoy.Api.V3Alpha.Core.HeaderMap();
            if (messagePieceCase_ == MessagePieceOneofCase.RequestHeaders) {
              subBuilder.MergeFrom(RequestHeaders);
            }
            input.ReadMessage(subBuilder);
            RequestHeaders = subBuilder;
            break;
          }
          case 26: {
            global::Envoy.Data.Tap.V3Alpha.Body subBuilder = new global::Envoy.Data.Tap.V3Alpha.Body();
            if (messagePieceCase_ == MessagePieceOneofCase.RequestBodyChunk) {
              subBuilder.MergeFrom(RequestBodyChunk);
            }
            input.ReadMessage(subBuilder);
            RequestBodyChunk = subBuilder;
            break;
          }
          case 34: {
            global::Envoy.Api.V3Alpha.Core.HeaderMap subBuilder = new global::Envoy.Api.V3Alpha.Core.HeaderMap();
            if (messagePieceCase_ == MessagePieceOneofCase.RequestTrailers) {
              subBuilder.MergeFrom(RequestTrailers);
            }
            input.ReadMessage(subBuilder);
            RequestTrailers = subBuilder;
            break;
          }
          case 42: {
            global::Envoy.Api.V3Alpha.Core.HeaderMap subBuilder = new global::Envoy.Api.V3Alpha.Core.HeaderMap();
            if (messagePieceCase_ == MessagePieceOneofCase.ResponseHeaders) {
              subBuilder.MergeFrom(ResponseHeaders);
            }
            input.ReadMessage(subBuilder);
            ResponseHeaders = subBuilder;
            break;
          }
          case 50: {
            global::Envoy.Data.Tap.V3Alpha.Body subBuilder = new global::Envoy.Data.Tap.V3Alpha.Body();
            if (messagePieceCase_ == MessagePieceOneofCase.ResponseBodyChunk) {
              subBuilder.MergeFrom(ResponseBodyChunk);
            }
            input.ReadMessage(subBuilder);
            ResponseBodyChunk = subBuilder;
            break;
          }
          case 58: {
            global::Envoy.Api.V3Alpha.Core.HeaderMap subBuilder = new global::Envoy.Api.V3Alpha.Core.HeaderMap();
            if (messagePieceCase_ == MessagePieceOneofCase.ResponseTrailers) {
              subBuilder.MergeFrom(ResponseTrailers);
            }
            input.ReadMessage(subBuilder);
            ResponseTrailers = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
